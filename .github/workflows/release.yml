name: Build and publish AppImages

env:
  UBUNTU_RELEASE: jammy
  UBUNTU_PUBKEY: 871920D1991BC93C

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v4
        with:
          platforms: ${{ matrix.platform }}
          outputs: build
          build-args: |
            UBUNTU_RELEASE
      - uses: rlespinasse/github-slug-action@v4
      - name: Prepare AppImage build
        env:
          TARGET_PLATFORM: ${{ matrix.platform }}
        shell: bash
        run: |
          set -eu

          find build -mindepth 1 -maxdepth 1 -type d | while read -r path; do
            mv "${path}" AppDir
            build_arch="$(basename "${path}")"

            if [ -z "${APPIMAGE_ICON-}" ]; then
              icon_path=AppDir/usr/share/icons/hicolor/scalable/mimetypes
              icon_name=no-icon
              mkdir -p "${icon_path}"
              touch "${icon_path}/${icon_name}.svg"
            fi

            if [ ! -e *.AppImage.zsync ]; then
              touch dummy-to-prevent-fail-of-appimage-builder.AppImage.zsync
            fi

            . .github/workflows/appimage-metadata.env
            set -a
            APPIMAGE_ARCH="${build_arch}"
            APPDIR_APPINFO_ID="${APPIMAGE_ID:-$(echo "${GITHUB_REPOSITORY}" | tr / .)}"
            APPDIR_APPINFO_NAME="${APPIMAGE_NAME:-${GITHUB_REPOSITORY_NAME_PART}}"
            APPDIR_APPINFO_VERSION="${GITHUB_REF_SLUG}"
            APPDIR_APPINFO_ICON="${APPIMAGE_ICON:-${icon_name}}"
            APPDIR_APPINFO_EXEC="${APPIMAGE_EXEC:-usr/bin/${GITHUB_REPOSITORY_NAME_PART}}"
            APPDIR_APPINFO_EXEC_ARGS="${APPIMAGE_EXEC_ARGS:-'$@'}"
            APPDIR_APT_ARCH="${TARGET_PLATFORM#*/}"
            APPDIR_APT_SOURCES_DISTRIBUTION="${UBUNTU_RELEASE}"
            APPDIR_APT_SOURCES_PUBKEY="${UBUNTU_PUBKEY}"
            APPDIR_APT_INCLUDE="[${APPIMAGE_DEPS}]"
            envsubst <.github/workflows/AppImageBuilder.yml.in >AppImageBuilder.yml
          done
      - uses: AppImageCrafters/build-appimage@v1
      - uses: actions/upload-artifact@v3
        with:
          name: appimages
          path: ./*.AppImage
          if-no-files-found: error

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: appimages
          path: assets
      - name: Create checksum for release assets
        shell: bash
        run: |
          algo="${SHA_ALGORITHM:-256}"
          find assets -type f | while read -r asset; do
            shasum --binary --algorithm "${algo}" "${asset}" >"${asset}.sha${algo}"
          done
      - uses: softprops/action-gh-release@v1
        with:
          files: assets/*
