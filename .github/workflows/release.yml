name: Build and publish AppImages

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        platform:
          - linux/amd64
#          - linux/arm64
    steps:
      - uses: actions/checkout@v4
      - uses: falti/dotenv-action@v1
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v4
        with:
          platforms: ${{ matrix.platform }}
          outputs: build
          build-args: |
            UBUNTU_RELEASE
      - uses: rlespinasse/github-slug-action@v4
      - name: Prepare AppImage build
        env:
          TARGET_PLATFORM: ${{ matrix.platform }}
        shell: bash
        run: |
          set -a
          APPIMAGE_ID="${APPIMAGE_ID:-$(echo "${GITHUB_REPOSITORY}" | tr / .)}"
          APPIMAGE_NAME="${APPIMAGE_NAME:-${GITHUB_REPOSITORY_NAME_PART}}"
          APPIMAGE_VERSION="${APPIMAGE_VERSION:-${GITHUB_REF_SLUG}}"
          APPIMAGE_EXEC="${APPIMAGE_EXEC:-usr/bin/${GITHUB_REPOSITORY_NAME_PART}}"
          .github/workflows/prepare-metadata build "${TARGET_PLATFORM}"
      - uses: AppImageCrafters/build-appimage@v1
      - uses: actions/upload-artifact@v3
        with:
          name: appimages
          path: ./*.AppImage
          if-no-files-found: error

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: write
    steps:
      - uses: falti/dotenv-action@v1
      - uses: actions/download-artifact@v3
        with:
          name: appimages
          path: assets
      - name: Create checksum for release assets
        shell: bash
        run: |
          algo="${SHA_ALGORITHM:-256}"
          find assets -type f | while read -r asset; do
            shasum --binary --algorithm "${algo}" "${asset}" >"${asset}.sha${algo}"
          done
      - uses: softprops/action-gh-release@v1
        with:
          files: assets/*
